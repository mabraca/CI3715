'''
Created on 07/10/2017

@author: mabraca
'''
from ast import parse

    
class BilleteraElectronica:
    """
    Datos personales del dueño
    PIN(Personal Identification Number) es un código secreto a la hora de autentificar la
    identidad del usuario"""
    def __init__(self):
        self.busqueda={20267824:1234}
        self.registro=()
    
    def busqueda(self, cedula):
        self.cedula=cedula
        return self.cedula in self.busqueda
        
    def correcto_PIN(self,cedula, clave):
        """Busca si la persona ya se encuentra registrada con la cedula.
            y verifica si el PIN ingresado es correcto"""
        self.cedula=cedula
        self.clave= clave
        if self.cedula in self.busqueda == True:
            return self.busqueda[self.cedula] == self.clave
            
    def registrar(self, nombres, apellidos, CI, PIN):
        """Diccionario que lleva un registro de las personas
        con billetera electronica"""
        self.nombres=nombres
        self.apellidos=apellidos
        self.CI=CI
        self.PIN=PIN
        print(self.CI==list(self.busqueda.keys())[0])
        if (self.CI==list(self.busqueda.keys())[0])==False:
            """Busca si la persona ya se encuentra registrada con la cedula. Si no esta, la registra"""
            self.busqueda[self.CI]=self.PIN
            personas=[self.CI, self.PIN, self.nombres, self.apellidos]
            #self.registro.append(personas)
            print(self.busqueda)
            return self.CI in self.busqueda
        else:
            print("Error. El usuario ", self.CI, " ya esta registrado \n")
            return False
        
    #Estructura de Credito
    class Credito:
        """Registra recargas relacionados a la billetera electrónica"""
        def __init__(self, monto, fecha, ident, nombres, apellidos, CI):
            self.monto=monto
            self.fecha= fecha
            self.id= ident
        def __repr__(self):
            """Para imprimir en pantalla """
            return "Linea de credito \n Monto: %d,Fecha: %s, ID Neg %i" % (self.monto, self.fecha, self.id)
        
    class Debito:
        """Registra los débitos (consumos) relacionados a la billetera electrónica"""
        def __init__(self, monto, fecha, ident, nombres, apellidos, CI, PIN):
            self.monto=monto
            self.fecha= fecha
            self.id= ident
            
        def __repr__(self):
            """Para imprimir en pantalla """
            return "Linea de debito \n Monto: %d,Fecha: %s, ID Neg %i" % (self.monto, self.fecha, self.id)
    
    def saldo(self):
        saldo= self.saldoAnterior;
        return saldo
    def recargar(self, monto, fecha, ident):
        credito= Credito(monto, fecha, ident)
        return 
    def consumir(self, monto, fecha, ident):
        credito= Debito(monto, fecha, ident)
        return 
        
billetera=BilleteraElectronica()
billetera.registrar("M4ria", "Bra", 20267824, 1234)
billetera.registrar("Adr", "Bra", 20267823, 1234)