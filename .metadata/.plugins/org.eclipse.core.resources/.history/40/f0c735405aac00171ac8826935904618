'''
Created on 08/10/2017

@author: mabraca
'''
import unittest

class Test_Billetera(unittest.TestCase):  
    def test_1(self):
        """ Consumo mas de lo que tengo"""
        print("Consumir mas de lo que tengo en la cuenta")
        billetera1=BilleteraElectronica(1,"Maria", "Bra", 20267824, 1234)
        billetera1.recargar(100, "20/12/2017", "Comercio1", 20267824)
        asserEquals(100,billetera1.saldo())
        billetera1.consumir(250, "22/15/2017", "Comercio1", 20267824, 1234)
        asserEquals(100,billetera1.saldo())

if __name__ == '__main__':
    unittest.main()
            
class BilleteraElectronica:
    """Datos personales del dueño PIN(Personal Identification Number) es un código secreto a la hora de autentificar la
    identidad del usuario"""
    def __init__(self, ident, nombres, apellidos, CI, PIN):
        self.id=ident
        self.saldoPrincipal=0
        self.nombres=nombres
        self.apellidos=apellidos
        self.CI=CI
        self.PIN=PIN

    #Estructura de Credito
    class Credito:
        """Registra recargas relacionados a la billetera electrónica"""
        def __init__(self, monto, fecha, ident):
            self.monto=monto
            self.fecha= fecha
            self.id= ident
        def __repr__(self):
            """Para imprimir en pantalla """
            return "Linea de credito \n [ %f,%s,%s]" % (self.monto, self.fecha, self.id)
          
    #Estructura de Dedito    
    class Debito:
        """Registra los débitos (consumos) relacionados a la billetera electrónica"""
        def __init__(self, monto, fecha, ident):
            self.monto=monto
            self.fecha= fecha
            self.id= ident
            
        def __repr__(self):
            """Para imprimir en pantalla """
            return "Linea de debito \n Monto: %d,Fecha: %s, ID Neg %i" % (self.monto, self.fecha, self.id)
      
      
    def saldo(self):
        print(self.saldoPrincipal)
        return self.saldoPrincipal
    
    def recargar(self, monto, fecha, ident, CI):
        if CI== self.CI:
            self.Credito(monto, fecha, ident)
            self.saldoPrincipal= self.saldoPrincipal + monto
            return True
        else:
            print("ERROR. Usuario incorrecto")
            return False
    
    def consumir(self, monto, fecha, ident, CI, PIN):
        if CI==self.CI and PIN==self.PIN:
            if self.saldoPrincipal>=monto:
                self.Debito(monto, fecha, ident)
                self.saldoPrincipal= self.saldoPrincipal - monto
                return True
            else:
                print("ERROR. Saldo insuficiente")
                return False
        else:
            print("ERROR. El consumo no esta permitido. Dato incorrecto")
            return False
        
